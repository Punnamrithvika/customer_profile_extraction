{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rithv\\\\resume-parser\\\\frontend\\\\src\\\\components\\\\ProfileUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { uploadProfiles } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileUploader = ({\n  onUploadSuccess,\n  token\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleFileChange = e => {\n    setFiles(Array.from(e.target.files)); // Convert FileList to array\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (files.length === 0) {\n      setErrors(['Please select one or more resume files to upload.']);\n      return;\n    }\n    setIsLoading(true);\n    setMessages([]);\n    setErrors([]);\n    const successMessages = [];\n    const errorMessages = [];\n    for (const file of files) {\n      try {\n        const uploadedProfile = await uploadProfiles(file, token); // Upload each file\n        successMessages.push(`✅ ${file.name} uploaded successfully.`);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'An error occurred.';\n        errorMessages.push(`❌ ${file.name} failed: ${errorMessage}`);\n        console.error(err);\n      }\n    }\n    setMessages(successMessages);\n    setErrors(errorMessages);\n    setIsLoading(false);\n    setFiles([]);\n    e.target.reset();\n    if (successMessages.length > 0) {\n      onUploadSuccess(); // Notify parent only if at least one success\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"uploader-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Resumes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Supported formats: PDF, DOCX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        accept: \".pdf,.docx,.doc\",\n        disabled: isLoading,\n        webkitdirectory: \"\" // Optional: Allows folder selection in Chromium-based browsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: files.length === 0 || isLoading,\n        children: isLoading ? 'Uploading...' : 'Upload All'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), messages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message success\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 47\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message error\",\n      children: errors.map((err, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: err\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ProfileUploader, \"/4t/JXH03/dX+LcOBMvewo5Rwlg=\");\n_c = ProfileUploader;\nexport default ProfileUploader;\nvar _c;\n$RefreshReg$(_c, \"ProfileUploader\");","map":{"version":3,"names":["React","useState","uploadProfiles","jsxDEV","_jsxDEV","ProfileUploader","onUploadSuccess","token","_s","files","setFiles","messages","setMessages","errors","setErrors","isLoading","setIsLoading","handleFileChange","e","Array","from","target","handleSubmit","preventDefault","length","successMessages","errorMessages","file","uploadedProfile","push","name","err","_err$response","_err$response$data","errorMessage","response","data","detail","console","error","reset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","multiple","onChange","accept","disabled","webkitdirectory","map","msg","i","_c","$RefreshReg$"],"sources":["C:/Users/rithv/resume-parser/frontend/src/components/ProfileUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { uploadProfiles } from '../api/api';\n\nconst ProfileUploader = ({ onUploadSuccess, token }) => {\n    const [files, setFiles] = useState([]);\n    const [messages, setMessages] = useState([]);\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleFileChange = (e) => {\n        setFiles(Array.from(e.target.files)); // Convert FileList to array\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (files.length === 0) {\n            setErrors(['Please select one or more resume files to upload.']);\n            return;\n        }\n\n        setIsLoading(true);\n        setMessages([]);\n        setErrors([]);\n\n        const successMessages = [];\n        const errorMessages = [];\n\n        for (const file of files) {\n            try {\n                const uploadedProfile = await uploadProfiles(file, token); // Upload each file\n                successMessages.push(`✅ ${file.name} uploaded successfully.`);\n            } catch (err) {\n                const errorMessage = err.response?.data?.detail || 'An error occurred.';\n                errorMessages.push(`❌ ${file.name} failed: ${errorMessage}`);\n                console.error(err);\n            }\n        }\n\n        setMessages(successMessages);\n        setErrors(errorMessages);\n        setIsLoading(false);\n        setFiles([]);\n        e.target.reset();\n\n        if (successMessages.length > 0) {\n            onUploadSuccess(); // Notify parent only if at least one success\n        }\n    };\n\n    return (\n        <div className=\"uploader-container\">\n            <h2>Upload Resumes</h2>\n            <p>Supported formats: PDF, DOCX</p>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"file\"\n                    multiple\n                    onChange={handleFileChange}\n                    accept=\".pdf,.docx,.doc\"\n                    disabled={isLoading}\n                    webkitdirectory=\"\" // Optional: Allows folder selection in Chromium-based browsers\n                />\n                <button type=\"submit\" disabled={files.length === 0 || isLoading}>\n                    {isLoading ? 'Uploading...' : 'Upload All'}\n                </button>\n            </form>\n\n            {messages.length > 0 && (\n                <div className=\"message success\">\n                    {messages.map((msg, i) => <p key={i}>{msg}</p>)}\n                </div>\n            )}\n\n            {errors.length > 0 && (\n                <div className=\"message error\">\n                    {errors.map((err, i) => <p key={i}>{err}</p>)}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ProfileUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}